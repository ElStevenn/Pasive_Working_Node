"""Updated models

Revision ID: 2bbdbbb01aae
Revises: 590fb7ae35b5
Create Date: 2024-08-26 12:41:29.863291

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2bbdbbb01aae'
down_revision: Union[str, None] = '590fb7ae35b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('alerts', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('alerts', 'execution_alert_datetime',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('economic_calendar_alerts', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('economic_calendar_alerts', 'status',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('economic_calendar_alerts', 'alert_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('economic_calendar_alerts', 'previous_value',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('economic_calendar_alerts', 'event_execution',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('economic_calendar_alerts', 'timezone',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('fear_greed_bot', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.drop_constraint('fear_greed_bot_user_id_key', 'fear_greed_bot', type_='unique')
    op.alter_column('feargreedsubscription', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('feargreedsubscription', 'notification_level',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.add_column('user', sa.Column('picture', sa.Text(), nullable=True))
    op.add_column('user', sa.Column('oauth_provider', sa.String(length=255), nullable=True))
    op.add_column('user', sa.Column('oauth_token', sa.String(length=255), nullable=True))
    op.add_column('user', sa.Column('refresh_token', sa.String(length=255), nullable=True))
    op.alter_column('user', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('user', 'session_ips',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.add_column('user_configuration', sa.Column('id', sa.UUID(), nullable=False))
    op.alter_column('user_configuration', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('user_configuration', 'cvi',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_configuration', 'cvi',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('user_configuration', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('user_configuration', 'id')
    op.alter_column('user', 'session_ips',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('user', 'id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('user', 'refresh_token')
    op.drop_column('user', 'oauth_token')
    op.drop_column('user', 'oauth_provider')
    op.drop_column('user', 'picture')
    op.alter_column('feargreedsubscription', 'notification_level',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
    op.alter_column('feargreedsubscription', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=False)
    op.create_unique_constraint('fear_greed_bot_user_id_key', 'fear_greed_bot', ['user_id'])
    op.alter_column('fear_greed_bot', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('economic_calendar_alerts', 'timezone',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('economic_calendar_alerts', 'event_execution',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('economic_calendar_alerts', 'previous_value',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('economic_calendar_alerts', 'alert_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('economic_calendar_alerts', 'status',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('economic_calendar_alerts', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('alerts', 'execution_alert_datetime',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('alerts', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=False)
    # ### end Alembic commands ###
